#!/usr/bin/env python3
# integration_example.py
"""–ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–π UI —Å–∏—Å—Ç–µ–º—ã –≤ main.py"""

from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters
from app.handlers.router import register_router
from app.ui.keyboards import build_keyboard_with_description
from app.ui.texts import t

# –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∑–∞–º–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π on_cb
async def new_on_cb(update, context):
    """–ù–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–æ–≤ —á–µ—Ä–µ–∑ —Ä–æ—É—Ç–µ—Ä"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø (–µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞)
    # if not await check_access(update): return
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π —Ä–æ—É—Ç–µ—Ä
        from app.handlers.router import callback_entry
        await callback_entry(update.callback_query)
    except Exception as e:
        print(f"Error in new callback handler: {e}")
        # Fallback –∫ —Å—Ç–∞—Ä–æ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É
        await old_on_cb(update, context)

# –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
def create_app_with_new_ui():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –Ω–æ–≤–æ–π UI —Å–∏—Å—Ç–µ–º–æ–π"""
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = Application.builder().token("YOUR_BOT_TOKEN").build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    app.add_handler(CommandHandler("start", cmd_start))
    app.add_handler(CommandHandler("whereami", cmd_whereami))
    app.add_handler(CommandHandler("terms", cmd_terms))
    # ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    
    # –ó–ê–ú–ï–ù–Ø–ï–ú —Å—Ç–∞—Ä—ã–π CallbackQueryHandler –Ω–∞ –Ω–æ–≤—ã–π
    # app.add_handler(CallbackQueryHandler(on_cb))  # –°–¢–ê–†–´–ô
    app.add_handler(CallbackQueryHandler(new_on_cb))  # –ù–û–í–´–ô
    
    # –ò–ª–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–æ—É—Ç–µ—Ä –Ω–∞–ø—Ä—è–º—É—é:
    # register_router(app)  # –≠—Ç–æ –∑–∞–º–µ–Ω–∏—Ç –≤—Å–µ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    
    app.add_handler(MessageHandler(filters.PHOTO, on_photo))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, on_text))
    
    return app

# –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∑–∞–º–µ–Ω—ã —Å—Ç–∞—Ä—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä
def create_home_keyboard_new():
    """–°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É"""
    text, keyboard = build_keyboard_with_description("root")
    return text, keyboard

# –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∑–∞–º–µ–Ω—ã —Å—Ç–∞—Ä—ã—Ö callback-–æ–≤
def create_callback_new(action, node_id=None, extra=None):
    """–°–æ–∑–¥–∞–Ω–∏–µ callback –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É"""
    from app.ui.callbacks import Cb
    return Cb(action, node_id, extra).pack()

# –ü—Ä–∏–º–µ—Ä –º–∏–≥—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ä–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def migrate_kb_home_inline():
    """–ú–∏–≥—Ä–∞—Ü–∏—è —Å—Ç–∞—Ä–æ–π kb_home_inline() –∫ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ"""
    # –°–¢–ê–†–´–ô –ö–û–î:
    # def kb_home_inline():
    #     return InlineKeyboardMarkup([
    #         [InlineKeyboardButton("üé¨ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ", callback_data="menu_make")],
    #         [InlineKeyboardButton("üß± LEGO –º—É–ª—å—Ç–∏–∫–∏", callback_data="menu_lego")],
    #         [InlineKeyboardButton("üñºÔ∏è –û–∂–∏–≤–∏—Ç—å —Ñ–æ—Ç–æ", callback_data="menu_alive")],
    #         [InlineKeyboardButton("üëó –ü—Ä–∏–º–µ—Ä–æ—á–Ω–∞—è", callback_data="menu_tryon")],
    #         [InlineKeyboardButton("üì∏ –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ", callback_data="menu_transforms")],
    #         [InlineKeyboardButton("‚ö° JSON Pro", callback_data="menu_jsonpro")],
    #         [InlineKeyboardButton("üìö –ì–∞–π–¥—ã", callback_data="menu_guides")],
    #         [InlineKeyboardButton("üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="menu_profile")],
    #         [InlineKeyboardButton("üìú –ò—Å—Ç–æ—Ä–∏—è", callback_data="show_history")],
    #     ])
    
    # –ù–û–í–´–ô –ö–û–î:
    text, keyboard = build_keyboard_with_description("root")
    return keyboard

# –ü—Ä–∏–º–µ—Ä –∑–∞–º–µ–Ω—ã —Å—Ç–∞—Ä–æ–≥–æ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
async def old_on_cb(update, context):
    """–°—Ç–∞—Ä—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–æ–≤ (–¥–ª—è fallback)"""
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–æ–¥ –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ on_cb
    pass

# –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã —Å –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
async def cmd_start_new(update, context):
    """–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –∫–æ–º–∞–Ω–¥—ã /start"""
    text, keyboard = build_keyboard_with_description("root")
    
    await update.message.reply_text(
        text,
        reply_markup=keyboard,
        parse_mode="HTML"
    )

# –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
def create_migration_wrapper(old_callback_func):
    """–°–æ–∑–¥–∞–Ω–∏–µ –æ–±–µ—Ä—Ç–∫–∏ –¥–ª—è –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏"""
    async def wrapper(update, context):
        try:
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –Ω–æ–≤—ã–π —Ä–æ—É—Ç–µ—Ä
            from app.handlers.router import callback_entry
            await callback_entry(update.callback_query)
        except Exception as e:
            print(f"New router failed, falling back to old handler: {e}")
            # Fallback –∫ —Å—Ç–∞—Ä–æ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É
            await old_callback_func(update, context)
    
    return wrapper

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π –æ–±–µ—Ä—Ç–∫–∏
def setup_migrated_app():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –º–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π –æ–±–µ—Ä—Ç–∫–æ–π"""
    app = Application.builder().token("YOUR_BOT_TOKEN").build()
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω—É—é –æ–±–µ—Ä—Ç–∫—É
    migrated_callback_handler = create_migration_wrapper(old_on_cb)
    app.add_handler(CallbackQueryHandler(migrated_callback_handler))
    
    return app

if __name__ == "__main__":
    print("–≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∏–º–µ—Ä—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–π UI —Å–∏—Å—Ç–µ–º—ã.")
    print("–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –Ω—É–∂–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ main.py –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏.")

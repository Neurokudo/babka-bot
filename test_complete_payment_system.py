#!/usr/bin/env python3
"""
–ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ü–õ–ê–¢–ï–ñ–ï–ô YOOKASSA
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∂–¥—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–æ–≥–ª–∞—Å–Ω–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
"""
import os
import sys
import json
import time
import requests
from pathlib import Path
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv(dotenv_path=Path(__file__).parent / ".env")

def test_yookassa_credentials():
    """–¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ credentials YooKassa"""
    print("üîê –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ credentials YooKassa")
    print("-" * 50)
    
    shop_id = os.getenv("YOOKASSA_SHOP_ID")
    secret_key = os.getenv("YOOKASSA_SECRET_KEY")
    
    if not shop_id:
        print("‚ùå YOOKASSA_SHOP_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    if not secret_key:
        print("‚ùå YOOKASSA_SECRET_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    print(f"‚úÖ YOOKASSA_SHOP_ID: {shop_id}")
    print(f"‚úÖ YOOKASSA_SECRET_KEY: {secret_key[:10]}...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API
    try:
        response = requests.get(
            "https://api.yookassa.ru/v3/me",
            auth=(shop_id, secret_key),
            timeout=10
        )
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ")
            print(f"   Account ID: {data.get('account_id')}")
            print(f"   Status: {data.get('status')}")
            return True
        elif response.status_code == 401:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ credentials - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ SHOP_ID –∏ SECRET_KEY")
            return False
        else:
            print(f"‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç API: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")
        return False

def test_payment_creation():
    """–¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞"""
    print("\nüí≥ –¢–ï–°–¢ 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞")
    print("-" * 50)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å
        sys.path.insert(0, str(Path(__file__).parent))
        from payment_yookassa import create_payment_link, YooKassaError
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂
        payment_url = create_payment_link(
            user_id=12345,
            amount=100.0,
            description="–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø–ª–∞—Ç–µ–∂–µ–π",
            metadata={"test": True, "system_check": True}
        )
        
        print(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"üîó URL: {payment_url}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–æ–º–µ–Ω
        if "yoomoney.ru" in payment_url or "yookassa.ru" in payment_url:
            print("‚úÖ URL —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–æ–º–µ–Ω YooKassa/YooMoney")
        else:
            print(f"‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –¥–æ–º–µ–Ω –≤ URL: {payment_url}")
        
        return True
        
    except YooKassaError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ YooKassa: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def test_webhook_server():
    """–¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞"""
    print("\nüåê –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞")
    print("-" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ URL —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
    possible_urls = [
        "https://babka-bot.railway.app",
        "https://babka-bot-production.railway.app",
        "https://babka-ai-bot.railway.app",
        "https://babkakudo-bot.railway.app"
    ]
    
    working_url = None
    
    for url in possible_urls:
        try:
            print(f"   –ü—Ä–æ–≤–µ—Ä—è–µ–º: {url}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º health endpoint
            health_response = requests.get(f"{url}/health", timeout=5)
            
            if health_response.status_code == 200:
                try:
                    data = health_response.json()
                    if data.get("status") == "healthy" and "webhook" in data.get("service", "").lower():
                        print(f"   ‚úÖ Webhook —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç: {url}")
                        working_url = url
                        break
                    else:
                        print(f"   ‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ –Ω–µ webhook: {data}")
                except:
                    print(f"   ‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ –Ω–µ JSON (—Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è)")
            else:
                print(f"   ‚ùå HTTP {health_response.status_code}")
                
        except requests.exceptions.RequestException:
            print(f"   ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    if working_url:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º webhook endpoint
        try:
            webhook_response = requests.post(
                f"{working_url}/webhook/yookassa",
                json={"test": "data"},
                headers={"Content-Type": "application/json"},
                timeout=5
            )
            
            if webhook_response.status_code == 200:
                print(f"‚úÖ Webhook endpoint –æ—Ç–≤–µ—á–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                return working_url
            else:
                print(f"‚ö†Ô∏è  Webhook endpoint –≤–µ—Ä–Ω—É–ª: {webhook_response.status_code}")
                return working_url
                
        except Exception as e:
            print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è webhook: {e}")
            return working_url
    
    print("‚ùå –†–∞–±–æ—á–∏–π webhook —Å–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
    return None

def test_webhook_processing():
    """–¢–µ—Å—Ç 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ webhook –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüì® –¢–ï–°–¢ 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ webhook –¥–∞–Ω–Ω—ã—Ö")
    print("-" * 50)
    
    try:
        sys.path.insert(0, str(Path(__file__).parent))
        from payment_yookassa import process_payment_webhook
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ webhook –æ—Ç YooKassa
        test_webhook_data = {
            "type": "notification",
            "event": "payment.succeeded",
            "object": {
                "id": "test_payment_12345",
                "status": "succeeded",
                "amount": {
                    "value": "100.00",
                    "currency": "RUB"
                },
                "metadata": {
                    "user_id": "12345",
                    "test": "true"
                },
                "created_at": "2025-01-01T12:00:00.000Z",
                "captured_at": "2025-01-01T12:00:05.000Z"
            }
        }
        
        result = process_payment_webhook(test_webhook_data)
        
        if result:
            print("‚úÖ Webhook –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ")
            print(f"   Event: {result.get('event')}")
            print(f"   Payment ID: {result.get('payment_id')}")
            print(f"   Amount: {result.get('amount')} {result.get('currency')}")
            print(f"   User ID: {result.get('user_id')}")
            print(f"   Status: {result.get('status')}")
            return True
        else:
            print("‚ùå Webhook –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook: {e}")
        return False

def test_bot_integration():
    """–¢–µ—Å—Ç 5: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–æ—Ç–æ–º"""
    print("\nü§ñ –¢–ï–°–¢ 5: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–æ—Ç–æ–º")
    print("-" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–æ—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        bot_username = "babkakudo_bot"
        bot_url = f"https://t.me/{bot_username}"
        
        print(f"üîó Return URL: {bot_url}?start=payment_success")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±–æ—Ç–∞ (–ø—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)
        try:
            response = requests.get(f"https://t.me/{bot_username}", timeout=5)
            if response.status_code == 200:
                print(f"‚úÖ –ë–æ—Ç @{bot_username} –¥–æ—Å—Ç—É–ø–µ–Ω")
            else:
                print(f"‚ö†Ô∏è  –ë–æ—Ç @{bot_username} –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        except:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±–æ—Ç–∞")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–æ—Ç–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ü–õ–ê–¢–ï–ñ–ï–ô YOOKASSA")
    print("=" * 70)
    print("–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–æ–≥–ª–∞—Å–Ω–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏")
    print("https://yookassa.ru/developers/using-api/interaction-format")
    print()
    
    results = []
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã
    results.append(("Credentials YooKassa", test_yookassa_credentials()))
    results.append(("–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞", test_payment_creation()))
    
    webhook_url = test_webhook_server()
    results.append(("Webhook —Å–µ—Ä–≤–µ—Ä", webhook_url is not None))
    
    results.append(("–û–±—Ä–∞–±–æ—Ç–∫–∞ webhook", test_webhook_processing()))
    results.append(("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–æ—Ç–æ–º", test_bot_integration()))
    
    # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏
    print("\nüéØ –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 30)
    
    passed = 0
    total = len(results)
    
    for test_name, result in results:
        status = "‚úÖ –ü–†–û–®–ï–õ" if result else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
        print(f"{test_name:.<25} {status}")
        if result:
            passed += 1
    
    print(f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("–°–∏—Å—Ç–µ–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        
        if webhook_url:
            print(f"\nüìã –ù–ê–°–¢–†–û–ô–ö–ê WEBHOOK –í YOOKASSA:")
            print(f"URL: {webhook_url}/webhook/yookassa")
            print("–°–æ–±—ã—Ç–∏—è: payment.succeeded, payment.canceled")
            
    else:
        print(f"\n‚ö†Ô∏è  –ù–ê–ô–î–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´: {total - passed} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–≤–∞–ª–µ–Ω–æ")
        print("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º")
    
    return passed == total

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)

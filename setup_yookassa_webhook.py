#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –≤ YooKassa
"""
import os
import json
import requests
from pathlib import Path
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv(dotenv_path=Path(__file__).parent / ".env")

def setup_webhook(webhook_url):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –≤ YooKassa"""
    shop_id = os.getenv("YOOKASSA_SHOP_ID")
    secret_key = os.getenv("YOOKASSA_SECRET_KEY")
    
    if not shop_id or not secret_key:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã YOOKASSA_SHOP_ID –∏–ª–∏ YOOKASSA_SECRET_KEY")
        return False
    
    # –°–æ–∑–¥–∞–µ–º webhook
    webhook_data = {
        "event": "payment.succeeded",
        "url": webhook_url
    }
    
    try:
        response = requests.post(
            "https://api.yookassa.ru/v3/webhooks",
            json=webhook_data,
            auth=(shop_id, secret_key),
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            print(f"‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: {webhook_url}")
            print(f"   ID: {response.json().get('id')}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è webhook: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ webhook: {e}")
        return False

def get_existing_webhooks():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö webhook'–æ–≤"""
    shop_id = os.getenv("YOOKASSA_SHOP_ID")
    secret_key = os.getenv("YOOKASSA_SECRET_KEY")
    
    if not shop_id or not secret_key:
        return []
    
    try:
        response = requests.get(
            "https://api.yookassa.ru/v3/webhooks",
            auth=(shop_id, secret_key)
        )
        
        if response.status_code == 200:
            webhooks = response.json().get("items", [])
            print(f"üìã –ù–∞–π–¥–µ–Ω–æ webhook'–æ–≤: {len(webhooks)}")
            for webhook in webhooks:
                print(f"   - {webhook.get('event')}: {webhook.get('url')}")
            return webhooks
        else:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ webhook'–æ–≤: {response.status_code}")
            return []
            
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ webhook'–æ–≤: {e}")
        return []

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è YooKassa")
    print("=" * 40)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    possible_urls = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    railway_url = os.getenv("RAILWAY_STATIC_URL")
    render_url = os.getenv("RENDER_EXTERNAL_URL")
    custom_url = os.getenv("WEBHOOK_BASE_URL")
    
    if railway_url:
        possible_urls.append(f"https://{railway_url}")
    if render_url:
        possible_urls.append(render_url)
    if custom_url:
        possible_urls.append(custom_url)
    
    # –ï—Å–ª–∏ URL –Ω–µ –Ω–∞–π–¥–µ–Ω, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not possible_urls:
        print("üåê –í–≤–µ–¥–∏—Ç–µ URL –≤–∞—à–µ–≥–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:")
        print("   –ü—Ä–∏–º–µ—Ä—ã:")
        print("   - https://your-app.railway.app")
        print("   - https://your-app.onrender.com")
        print("   - https://your-domain.com")
        
        base_url = input("URL: ").strip()
        if base_url:
            possible_urls.append(base_url)
    
    if not possible_urls:
        print("‚ùå URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ webhook'–∏
    print("\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ webhook'–∏...")
    existing_webhooks = get_existing_webhooks()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook –¥–ª—è –∫–∞–∂–¥–æ–≥–æ URL
    for base_url in possible_urls:
        webhook_url = f"{base_url.rstrip('/')}/webhook/yookassa"
        
        print(f"\nüîó –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook: {webhook_url}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π webhook
        webhook_exists = any(
            webhook.get("url") == webhook_url 
            for webhook in existing_webhooks
        )
        
        if webhook_exists:
            print(f"‚ÑπÔ∏è  Webhook —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {webhook_url}")
            continue
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å endpoint'–∞
        try:
            health_url = f"{base_url.rstrip('/')}/health"
            response = requests.get(health_url, timeout=10)
            if response.status_code == 200:
                print(f"‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω: {health_url}")
                
                # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook
                if setup_webhook(webhook_url):
                    print(f"üéâ Webhook —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
                    break
                else:
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å webhook")
            else:
                print(f"‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {health_url} (–∫–æ–¥: {response.status_code})")
                
        except requests.exceptions.RequestException as e:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞: {e}")
    
    print("\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüìã –ß—Ç–æ –¥–∞–ª—å—à–µ:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫")
    print("3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø–ª–∞—Ç–µ–∂ –≤ –±–æ—Ç–µ")

if __name__ == "__main__":
    main()

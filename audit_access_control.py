#!/usr/bin/env python3
"""
–ê–£–î–ò–¢: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º
"""

import os
import sys
sys.path.append('.')

from app.services.billing import can_use_feature, has_active_subscription
from app.db.db_subscriptions import get_user_plan

def audit_access_control():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º"""
    print("üîç –ê–£–î–ò–¢: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º")
    print("="*60)
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π
    print("\nüß™ –¢–ï–°–¢ 1: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π")
    user_id = 5015100178  # –£ –Ω–∞—Å –µ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∞ lite
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
        plan_data = get_user_plan(user_id)
        print(f"üìä –î–∞–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏: {plan_data}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º
        access_check = can_use_feature(user_id, "tryon")
        print(f"üîê –î–æ—Å—Ç—É–ø –∫ tryon: {access_check}")
        
        access_check = can_use_feature(user_id, "video_generation")
        print(f"üîê –î–æ—Å—Ç—É–ø –∫ video_generation: {access_check}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏
    print("\nüß™ –¢–ï–°–¢ 2: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏")
    user_id = 9999999999  # –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    
    try:
        plan_data = get_user_plan(user_id)
        print(f"üìä –î–∞–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏: {plan_data}")
        
        access_check = can_use_feature(user_id, "tryon")
        print(f"üîê –î–æ—Å—Ç—É–ø –∫ tryon: {access_check}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º –±–∞–ª–∞–Ω—Å–æ–º
    print("\nüß™ –¢–ï–°–¢ 3: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º –±–∞–ª–∞–Ω—Å–æ–º")
    user_id = 5015100178  # –£ –Ω–∞—Å –µ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∞, –Ω–æ –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –º–æ–Ω–µ—Ç
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –¥–æ—Ä–æ–≥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
        access_check = can_use_feature(user_id, "video_generation")  # –û—á–µ–Ω—å –¥–æ—Ä–æ–≥–æ
        print(f"üîê –î–æ—Å—Ç—É–ø –∫ –¥–æ—Ä–æ–≥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏: {access_check}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –†–∞–∑–Ω—ã–µ —Ç–∏–ø—ã —Ñ—É–Ω–∫—Ü–∏–π
    print("\nüß™ –¢–ï–°–¢ 4: –†–∞–∑–Ω—ã–µ —Ç–∏–ø—ã —Ñ—É–Ω–∫—Ü–∏–π")
    user_id = 5015100178
    
    functions = [
        "tryon",
        "video_generation", 
        "bg_removal",
        "photo_enhancement",
    ]
    
    for func_name in functions:
        try:
            access_check = can_use_feature(user_id, func_name)
            print(f"üîê {func_name}: {access_check}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–ª—è {func_name}: {e}")
    
    # –¢–µ—Å—Ç 5: –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    print("\nüß™ –¢–ï–°–¢ 5: –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    
    invalid_cases = [
        (0, "tryon"),
        (-1, "tryon"),
        (None, "tryon"),
        (5015100178, ""),
        (5015100178, None),
    ]
    
    for user_id, func_name in invalid_cases:
        try:
            access_check = can_use_feature(user_id, func_name)
            print(f"üîê –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ({user_id}, {func_name}): {access_check}")
        except Exception as e:
            print(f"‚úÖ –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã: {e}")

if __name__ == "__main__":
    audit_access_control()
    print("\n‚úÖ –ê–£–î–ò–¢ –ü–†–û–í–ï–†–ö–ò –î–û–°–¢–£–ü–ê –ó–ê–í–ï–†–®–ï–ù")

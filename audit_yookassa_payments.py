#!/usr/bin/env python3
"""
–ê–£–î–ò–¢: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–µ–π YooKassa
"""

import os
import sys
sys.path.append('.')

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
os.environ['YOOKASSA_SHOP_ID'] = '1176639'
os.environ['YOOKASSA_SECRET_KEY'] = 'live_PDdv14wxc9W36rSeeE8j7c4tsnHw-N-Exnra0lMk2HU'

from app.services.yookassa_service import create_payment, create_topup_payment, check_payment_status, init_yookassa

def audit_yookassa_payments():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–µ–π YooKassa"""
    print("üîç –ê–£–î–ò–¢: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–µ–π YooKassa")
    print("="*60)
    
    # –¢–µ—Å—Ç 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è YooKassa
    print("\nüß™ –¢–ï–°–¢ 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è YooKassa")
    try:
        init_result = init_yookassa()
        if init_result:
            print("‚úÖ YooKassa –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ YooKassa")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return False
    
    # –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É
    print("\nüß™ –¢–ï–°–¢ 2: –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É")
    try:
        user_id = 5015100177
        plan = "standard"
        price_rub = 2490
        coins = 210
        
        payment_url, payment_id = create_payment(
            user_id=user_id,
            plan=plan,
            price_rub=price_rub,
            coins=coins,
            username="test_user"
        )
        
        print(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"üÜî ID –ø–ª–∞—Ç–µ–∂–∞: {payment_id}")
        print(f"üîó URL: {payment_url}")
        print(f"üí∞ –°—É–º–º–∞: {price_rub} ‚ÇΩ")
        print(f"üéüÔ∏è –ú–æ–Ω–µ—Ç: {coins}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞
        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞...")
        status = check_payment_status(payment_id)
        print(f"üìä –°—Ç–∞—Ç—É—Å: {status.get('status', 'unknown')}")
        print(f"üí∞ –°—É–º–º–∞: {status.get('amount', 0)} {status.get('currency', 'RUB')}")
        print(f"üè∑Ô∏è –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: {status.get('metadata', {})}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞: {e}")
        import traceback
        traceback.print_exc()
        return False
    
    # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –∑–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
    print("\nüß™ –¢–ï–°–¢ 3: –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –∑–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ")
    try:
        user_id = 5015100177
        coins = 50
        price_rub = 500
        
        payment_url, payment_id = create_topup_payment(
            user_id=user_id,
            coins=coins,
            price_rub=price_rub,
            username="test_user"
        )
        
        print(f"‚úÖ –ü–ª–∞—Ç–µ–∂ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"üÜî ID –ø–ª–∞—Ç–µ–∂–∞: {payment_id}")
        print(f"üîó URL: {payment_url}")
        print(f"üí∞ –°—É–º–º–∞: {price_rub} ‚ÇΩ")
        print(f"üéüÔ∏è –ú–æ–Ω–µ—Ç: {coins}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_payment_validation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –ø–ª–∞—Ç–µ–∂–µ–π"""
    print("\nüß™ –¢–ï–°–¢ 4: –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–ª–∞—Ç–µ–∂–µ–π")
    
    # –¢–µ—Å—Ç —Å –Ω–µ–≤–µ—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    test_cases = [
        {"user_id": 0, "plan": "invalid", "price_rub": -100, "coins": -50},
        {"user_id": -1, "plan": "", "price_rub": 0, "coins": 0},
        {"user_id": None, "plan": None, "price_rub": None, "coins": None},
    ]
    
    for i, test_case in enumerate(test_cases, 1):
        print(f"\n  –¢–µ—Å—Ç {i}: {test_case}")
        try:
            payment_url, payment_id = create_payment(
                user_id=test_case["user_id"],
                plan=test_case["plan"],
                price_rub=test_case["price_rub"],
                coins=test_case["coins"],
                username="test_user"
            )
            print(f"  ‚ùå –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω —Å –Ω–µ–≤–µ—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏! ID: {payment_id}")
        except Exception as e:
            print(f"  ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç: {e}")

if __name__ == "__main__":
    success = audit_yookassa_payments()
    test_payment_validation()
    
    if success:
        print("\n‚úÖ –ê–£–î–ò–¢ –ü–õ–ê–¢–ï–ñ–ï–ô –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û")
    else:
        print("\n‚ùå –ê–£–î–ò–¢ –ü–õ–ê–¢–ï–ñ–ï–ô –ó–ê–í–ï–†–®–ï–ù –° –û–®–ò–ë–ö–ê–ú–ò")

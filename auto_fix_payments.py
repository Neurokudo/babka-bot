#!/usr/bin/env python3
"""
–ü–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–ª–∞—Ç–µ–∂–∞–º–∏
"""
import os
import sys
import time
import subprocess
import requests
from pathlib import Path

def run_command(cmd, description, check=True):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º"""
    print(f"üîÑ {description}...")
    try:
        result = subprocess.run(cmd, shell=True, check=check, capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úÖ {description} - —É—Å–ø–µ—à–Ω–æ")
            if result.stdout.strip():
                print(f"   {result.stdout.strip()}")
            return True, result.stdout
        else:
            print(f"‚ö†Ô∏è  {description} - –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ")
            if result.stderr.strip():
                print(f"   {result.stderr.strip()}")
            return False, result.stderr
    except subprocess.CalledProcessError as e:
        print(f"‚ùå {description} - –æ—à–∏–±–∫–∞")
        print(f"   {e.stderr.strip()}")
        return False, e.stderr

def check_file_exists(filepath, description):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞"""
    if Path(filepath).exists():
        print(f"‚úÖ {description}: {filepath}")
        return True
    else:
        print(f"‚ùå {description} –Ω–µ –Ω–∞–π–¥–µ–Ω: {filepath}")
        return False

def test_webhook_endpoint(base_url):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å webhook endpoint"""
    health_url = f"{base_url.rstrip('/')}/health"
    webhook_url = f"{base_url.rstrip('/')}/webhook/yookassa"
    
    print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint: {health_url}")
    
    try:
        response = requests.get(health_url, timeout=10)
        if response.status_code == 200:
            data = response.json()
            if data.get("status") == "healthy":
                print(f"‚úÖ Webhook —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                print(f"üîó Webhook URL: {webhook_url}")
                return webhook_url
            else:
                print(f"‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ —Å—Ç–∞—Ç—É—Å –Ω–µ 'healthy': {data}")
        else:
            print(f"‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –∫–æ–¥: {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É: {e}")
    
    return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print("üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ –° –ü–õ–ê–¢–ï–ñ–ê–ú–ò")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    required_files = [
        "payment_yookassa.py",
        "webhook_server.py", 
        "main.py",
        "requirements.txt"
    ]
    
    print("üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞...")
    for file in required_files:
        if not check_file_exists(file, f"–§–∞–π–ª {file}"):
            print("‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞ babka-bot")
            sys.exit(1)
    
    # –ö–æ–º–º–∏—Ç–∏–º –∏ –ø—É—à–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    print("\nüì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π...")
    run_command("git add .", "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ git")
    
    commit_msg = "fix: –ø–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–ª–∞—Ç–µ–∂–µ–π - webhook —Å–µ—Ä–≤–µ—Ä + –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π return_url"
    success, _ = run_command(f'git commit -m "{commit_msg}"', "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞", check=False)
    
    if success:
        run_command("git push", "–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
    else:
        print("‚ÑπÔ∏è  –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ—Ç –Ω–æ–≤—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞")
    
    # –ñ–¥–µ–º –¥–µ–ø–ª–æ—è
    print("\n‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–µ–ø–ª–æ—è (30 —Å–µ–∫—É–Ω–¥)...")
    time.sleep(30)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    print("\nüîç –ò—â–µ–º URL —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    possible_urls = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º git remote –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    success, git_remote = run_command("git remote get-url origin", "–ü–æ–ª—É—á–µ–Ω–∏–µ git remote", check=False)
    
    if success and git_remote:
        if "railway" in git_remote.lower():
            print("üöÇ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: Railway")
            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å URL –∏–∑ Railway CLI
            success, railway_info = run_command("railway status", "–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ Railway", check=False)
            if success and "https://" in railway_info:
                # –ò–∑–≤–ª–µ–∫–∞–µ–º URL –∏–∑ –≤—ã–≤–æ–¥–∞
                lines = railway_info.split('\n')
                for line in lines:
                    if "https://" in line and "railway.app" in line:
                        url = line.split("https://")[1].split()[0]
                        possible_urls.append(f"https://{url}")
        
        elif "render" in git_remote.lower():
            print("üé® –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: Render")
            # –î–ª—è Render URL –æ–±—ã—á–Ω–æ –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –≤—Ä—É—á–Ω—É—é
        
        elif "heroku" in git_remote.lower():
            print("üü£ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: Heroku")
    
    # –ï—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–µ –Ω–∞—à–ª–∏, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not possible_urls:
        print("\nüåê –í–≤–µ–¥–∏—Ç–µ URL –≤–∞—à–µ–≥–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:")
        print("   –ü—Ä–∏–º–µ—Ä—ã:")
        print("   - https://your-app.railway.app")
        print("   - https://your-app.onrender.com")
        print("   - https://your-app.herokuapp.com")
        
        while True:
            url = input("\nURL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ").strip()
            if url.startswith("http"):
                possible_urls.append(url)
                break
            elif url:
                possible_urls.append(f"https://{url}")
                break
            else:
                print("‚ö†Ô∏è  –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π URL
    working_webhook_url = None
    for url in possible_urls:
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º: {url}")
        webhook_url = test_webhook_endpoint(url)
        if webhook_url:
            working_webhook_url = webhook_url
            break
        else:
            print(f"‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä –ø–æ –∞–¥—Ä–µ—Å—É {url} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    if not working_webhook_url:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—Ç–∞—é—â–∏–π webhook endpoint")
        print("üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
        print("2. –ó–∞–ø—É—â–µ–Ω –ª–∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä (webhook_server.py)")
        print("3. –î–æ—Å—Ç—É–ø–µ–Ω –ª–∏ URL –∏–∑–≤–Ω–µ")
        return
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook –≤ YooKassa
    print(f"\nüîó –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook –≤ YooKassa: {working_webhook_url}")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook
        env = os.environ.copy()
        env["WEBHOOK_BASE_URL"] = working_webhook_url.replace("/webhook/yookassa", "")
        
        result = subprocess.run([
            sys.executable, "setup_yookassa_webhook.py"
        ], env=env, capture_output=True, text=True)
        
        print(result.stdout)
        if result.stderr:
            print(result.stderr)
            
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ webhook: {e}")
        print("üîß –ù–∞—Å—Ç—Ä–æ–π—Ç–µ webhook –≤—Ä—É—á–Ω—É—é –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ YooKassa:")
        print(f"   URL: {working_webhook_url}")
        print("   –°–æ–±—ã—Ç–∏—è: payment.succeeded, payment.canceled")
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    print("\nüéØ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê")
    print("=" * 30)
    
    print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã:")
    print("   - Return URL –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ @babkakudo_bot")
    print("   - Webhook —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("   - –û–±—Ä–∞–±–æ—Ç–∫–∞ /start payment_success –¥–æ–±–∞–≤–ª–µ–Ω–∞")
    print("   - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–µ–ø–ª–æ—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
    
    print(f"\nüîó Webhook URL: {working_webhook_url}")
    
    print("\nüìã –ß—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å:")
    print("1. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø–ª–∞—Ç–µ–∂ –≤ –±–æ—Ç–µ")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –±–æ—Ç–∞")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –º–æ–Ω–µ—Ç—ã –∑–∞—á–∏—Å–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
    
    print("\nüéâ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main()

#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ PostgreSQL Railway
"""
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def fix_balance_postgres():
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å –≤ PostgreSQL Railway"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –≤ PostgreSQL Railway...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º DATABASE_URL
    database_url = os.getenv("DATABASE_URL")
    if not database_url:
        print("‚ö†Ô∏è DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("üí° –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –≤ Railway Shell –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    print(f"üìä DATABASE_URL: {database_url[:20]}...")
    
    try:
        import psycopg2
        
        conn = psycopg2.connect(database_url)
        cur = conn.cursor()
        
        UID = 5015100177
        TARGET = 100
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
        cur.execute("SELECT coins FROM users WHERE user_id = %s", (UID,))
        result = cur.fetchone()
        
        if not result:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {UID} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return False
        
        old_balance = result[0]
        print(f"üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {old_balance}")
        
        # –í—ã—á–∏—Å–ª—è–µ–º –¥–µ–ª—å—Ç—É
        delta = TARGET - old_balance
        print(f"üìà –î–µ–ª—å—Ç–∞: {delta}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
        cur.execute("UPDATE users SET coins = %s WHERE user_id = %s", (TARGET, UID))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        cur.execute("""
            INSERT INTO transactions(user_id, feature, coins_spent, note)
            VALUES (%s, 'balance_update', 0, %s)
        """, (UID, f"Admin set balance to {TARGET} (was {old_balance})"))
        
        conn.commit()
        cur.close()
        conn.close()
        
        print(f"‚úÖ –ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª—ë–Ω: old={old_balance}, new={TARGET}, delta={delta}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    print("üöÄ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 5015100177 = 100 –º–æ–Ω–µ—Ç –≤ PostgreSQL\n")
    
    if fix_balance_postgres():
        print("\nüéâ –ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ Railway PostgreSQL!")
        print("üí° –¢–µ–ø–µ—Ä—å –≤ –ª–æ–≥–∞—Ö –±–æ—Ç–∞ –¥–æ–ª–∂–Ω–æ –ø–æ—è–≤–∏—Ç—å—Å—è: Loaded user ... coins=100")
        return 0
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å")
        return 1

if __name__ == "__main__":
    exit(main())

#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å –º–æ–Ω–µ—Ç–∞–º–∏ –Ω–∞ balance_manager
"""
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def main():
    print("üîÑ –ú–∏–≥—Ä–∞—Ü–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å –º–æ–Ω–µ—Ç–∞–º–∏ –Ω–∞ balance_manager...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É –∞—É–¥–∏—Ç–∞
        from app.db import db_billing_audit
        db_billing_audit.init_audit_table()
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ –∞—É–¥–∏—Ç–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º balance_manager
        from app.services import balance_manager, billing_observer
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        test_user_id = 5015100177
        
        print(f"üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {test_user_id}...")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
        current_balance = balance_manager.get_balance(test_user_id)
        print(f"üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {current_balance}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–æ–Ω–µ—Ç
        print("‚ûï –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–æ–Ω–µ—Ç...")
        new_balance = balance_manager.add_coins(
            user_id=test_user_id,
            amount=10,
            reason="Migration test",
            feature="admin_test"
        )
        print(f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {new_balance}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–∞–Ω–∏–µ –º–æ–Ω–µ—Ç
        print("‚ûñ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–∞–Ω–∏–µ –º–æ–Ω–µ—Ç...")
        final_balance = balance_manager.spend_coins(
            user_id=test_user_id,
            amount=5,
            reason="Migration test spend",
            feature="admin_test"
        )
        print(f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ —Å–ø–∏—Å–∞–Ω–∏—è: {final_balance}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
        print("üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏...")
        history = billing_observer.get_user_recent_transactions(test_user_id, 5)
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(history)} –∑–∞–ø–∏—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç
        print("üìä –¢–µ—Å—Ç–∏—Ä—É–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç...")
        daily_report = billing_observer.get_daily_report()
        print(f"‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç: {daily_report['total_spent']} –ø–æ—Ç—Ä–∞—á–µ–Ω–æ, {daily_report['total_earned']} –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ")
        
        print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("üí° –¢–µ–ø–µ—Ä—å –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –º–æ–Ω–µ—Ç–∞–º–∏ –¥–æ–ª–∂–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å balance_manager")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = main()
    exit(0 if success else 1)

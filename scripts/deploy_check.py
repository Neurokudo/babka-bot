#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–ø–ª–æ—è –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
"""
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def main():
    print("üîç Checking deployment and database connection...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    database_url = os.getenv("DATABASE_URL")
    if not database_url:
        print("‚ùå DATABASE_URL not found in environment")
        return False
    
    print(f"‚úÖ DATABASE_URL found: {database_url[:20]}...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    try:
        from app.db import db_subscriptions as db
        
        uid = 5015100177
        balance = db.get_user_balance(uid)
        print(f"‚úÖ Connected to DB, user {uid} balance: {balance}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ pricing
        from app.services.pricing import get_available_tariffs, format_plans_list
        
        tariffs = get_available_tariffs()
        print(f"‚úÖ Pricing service working, {len(tariffs)} tariffs available")
        
        plans_text = format_plans_list()
        print(f"‚úÖ Plans text generated, length: {len(plans_text)} chars")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Database connection error: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = main()
    print(f"\n{'‚úÖ All checks passed!' if success else '‚ùå Some checks failed!'}")
    exit(0 if success else 1)

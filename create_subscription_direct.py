#!/usr/bin/env python3
"""
–ü—Ä—è–º–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ —á–µ—Ä–µ–∑ SQL
"""

import os
import sys
sys.path.append('.')

from app.db.db_subscriptions import db_conn

def create_subscription_direct():
    """–°–æ–∑–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ SQL"""
    print("üîß –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞–ø—Ä—è–º—É—é...")
    
    user_id = 5015100177
    payment_id = "30737b86-000f-5001-9000-1cc214d9af86"
    plan = "lite"
    coins = 120
    price_rub = 1990
    duration_days = 30
    
    try:
        with db_conn() as conn:
            cur = conn.cursor()
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            is_postgres = hasattr(conn, 'cursor') and 'psycopg2' in str(type(conn))
            
            if is_postgres:
                # PostgreSQL
                print("üóÑÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º PostgreSQL")
                
                # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É
                cur.execute("""
                    INSERT INTO subscriptions (user_id, plan, coins, price_rub, start_date, end_date, is_active, payment_id)
                    VALUES (%s, %s, %s, %s, datetime("now"), datetime("now") + (%s || ' days')::interval, TRUE, %s)
                """, (user_id, plan, coins, price_rub, duration_days, payment_id))
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                cur.execute("""
                    UPDATE users
                    SET plan = %s, plan_expiry = datetime("now") + (%s || ' days')::interval, coins = coins + %s
                    WHERE user_id = %s
                """, (plan, duration_days, coins, user_id))
                
            else:
                # SQLite
                print("üóÑÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º SQLite")
                
                # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É
                cur.execute("""
                    INSERT INTO subscriptions (user_id, plan, coins, price_rub, start_date, end_date, is_active, payment_id)
                    VALUES (?, ?, ?, ?, datetime("now"), datetime('now', '+? days'), 1, ?)
                """, (user_id, plan, coins, price_rub, duration_days, payment_id))
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                cur.execute("""
                    UPDATE users
                    SET plan = ?, plan_expiry = datetime('now', '+? days'), coins = coins + ?
                    WHERE user_id = ?
                """, (plan, duration_days, coins, user_id))
            
            conn.commit()
            print("‚úÖ –ü–û–î–ü–ò–°–ö–ê –°–û–ó–î–ê–ù–ê –£–°–ü–ï–®–ù–û!")
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_id}")
            print(f"üìã –¢–∞—Ä–∏—Ñ: {plan}")
            print(f"üéüÔ∏è –ú–æ–Ω–µ—Ç: {coins}")
            print(f"üí∞ –¶–µ–Ω–∞: {price_rub} ‚ÇΩ")
            print(f"‚è∞ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration_days} –¥–Ω–µ–π")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if is_postgres:
                cur.execute("SELECT plan, coins, plan_expiry FROM users WHERE user_id = %s", (user_id,))
            else:
                cur.execute("SELECT plan, coins, plan_expiry FROM users WHERE user_id = ?", (user_id,))
            
            result = cur.fetchone()
            if result:
                print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    create_subscription_direct()

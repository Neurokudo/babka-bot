#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–æ–≤ –∏ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ—Å–ª–∏ —Å—Ç–∞—Ä—ã–µ —Ç–∞—Ä–∏—Ñ—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def force_refresh():
    print("üîÑ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –¢–ê–†–ò–§–û–í")
    print("=" * 50)
    
    # 1. –û—á–∏—â–∞–µ–º –∫—ç—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    try:
        from app.services.billing import user_states
        old_count = len(user_states)
        user_states.clear()
        print(f"‚úÖ –û—á–∏—â–µ–Ω –∫—ç—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {old_count} ‚Üí 0")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞: {e}")
    
    # 2. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª–∏
    try:
        import importlib
        import app.config.pricing
        import app.services.pricing
        
        importlib.reload(app.config.pricing)
        importlib.reload(app.services.pricing)
        print("‚úÖ –ú–æ–¥—É–ª–∏ —Ç–∞—Ä–∏—Ñ–æ–≤ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª–µ–π: {e}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã
    try:
        from app.services.pricing import get_available_tariffs, format_plans_list
        
        tariffs = get_available_tariffs()
        print(f"\nüìã –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã ({len(tariffs)}):")
        for tariff in tariffs:
            print(f"  - {tariff['name']}: {tariff['title']} ‚Äî {tariff['price_rub']} ‚ÇΩ ‚Üí {tariff['coins']} –º–æ–Ω–µ—Ç")
            
        print(f"\nüìù –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫:")
        print(format_plans_list())
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞—Ä–∏—Ñ–æ–≤: {e}")
        return False
    
    # 4. –û—á–∏—â–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –∫—ç—à main.py (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
    try:
        # –≠—Ç–æ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ main.py –∑–∞–ø—É—â–µ–Ω
        print("\n‚ö†Ô∏è  –î–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞ main.py –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞")
        print("   –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /reload_profile –≤ –±–æ—Ç–µ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ main.py –∫—ç—à–∞: {e}")
    
    print("\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìã –ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:")
    print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ (–µ—Å–ª–∏ –æ–Ω –∑–∞–ø—É—â–µ–Ω)")
    print("2. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /reload_profile –≤ –±–æ—Ç–µ")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞—Ä–∏—Ñ—ã —á–µ—Ä–µ–∑ /plans")
    
    return True

if __name__ == "__main__":
    force_refresh()

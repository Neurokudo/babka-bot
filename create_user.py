#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
sys.path.append('.')

from app.db.db_subscriptions import db_conn

def create_user():
    """–°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print("üîß –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    
    user_id = 5015100177
    plan = "lite"
    coins = 120
    
    try:
        with db_conn() as conn:
            cur = conn.cursor()
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            is_postgres = hasattr(conn, 'cursor') and 'psycopg2' in str(type(conn))
            
            if is_postgres:
                print("üóÑÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º PostgreSQL")
                
                # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                cur.execute("""
                    INSERT INTO users (user_id, plan, coins, plan_expiry, auto_renew)
                    VALUES (%s, %s, %s, CURRENT_TIMESTAMP + INTERVAL '30 days', TRUE)
                    ON CONFLICT (user_id) DO UPDATE SET
                    plan = EXCLUDED.plan,
                    coins = EXCLUDED.coins,
                    plan_expiry = EXCLUDED.plan_expiry,
                    auto_renew = EXCLUDED.auto_renew
                """, (user_id, plan, coins))
                
            else:
                print("üóÑÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º SQLite")
                
                # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                cur.execute("""
                    INSERT OR REPLACE INTO users (user_id, plan, coins, plan_expiry, auto_renew)
                    VALUES (?, ?, ?, datetime('now', '+30 days'), 1)
                """, (user_id, plan, coins))
            
            conn.commit()
            print("‚úÖ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –°–û–ó–î–ê–ù!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if is_postgres:
                cur.execute("SELECT plan, coins, plan_expiry FROM users WHERE user_id = %s", (user_id,))
            else:
                cur.execute("SELECT plan, coins, plan_expiry FROM users WHERE user_id = ?", (user_id,))
            
            result = cur.fetchone()
            if result:
                print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
                print("üéâ –¢–µ–ø–µ—Ä—å –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞!")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    create_user()

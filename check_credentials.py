#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Google Cloud credentials
"""

import os
import sys
import json
import base64
from dotenv import load_dotenv
from pathlib import Path

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª
load_dotenv(dotenv_path=Path(__file__).parent / ".env")

def check_credentials():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Google Cloud credentials"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Google Cloud credentials...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_vars = [
        "GCP_PROJECT_ID",
        "GOOGLE_CLOUD_PROJECT",
        "GCP_LOCATION",
        "GOOGLE_CLOUD_LOCATION", 
        "GCP_KEY_JSON_B64",
        "GOOGLE_CREDENTIALS_JSON",
        "GOOGLE_APPLICATION_CREDENTIALS"
    ]
    
    print("\nüìã –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    for var in env_vars:
        value = os.getenv(var)
        if value:
            if "JSON" in var or "B64" in var:
                print(f"‚úÖ {var}: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ (–¥–ª–∏–Ω–∞: {len(value)} —Å–∏–º–≤–æ–ª–æ–≤)")
            else:
                print(f"‚úÖ {var}: {value}")
        else:
            print(f"‚ùå {var}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º GCP_KEY_JSON_B64
    print("\nüîë –ü—Ä–æ–≤–µ—Ä–∫–∞ GCP_KEY_JSON_B64:")
    key_b64 = os.getenv("GCP_KEY_JSON_B64")
    if key_b64:
        try:
            key_json = base64.b64decode(key_b64).decode("utf-8")
            key_data = json.loads(key_json)
            print(f"‚úÖ JSON –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
            print(f"   Project ID: {key_data.get('project_id', '–Ω–µ –Ω–∞–π–¥–µ–Ω')}")
            print(f"   Client Email: {key_data.get('client_email', '–Ω–µ –Ω–∞–π–¥–µ–Ω')}")
            print(f"   Private Key ID: {key_data.get('private_key_id', '–Ω–µ –Ω–∞–π–¥–µ–Ω')[:20]}...")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    else:
        print("‚ùå GCP_KEY_JSON_B64 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º GOOGLE_CREDENTIALS_JSON
    print("\nüîë –ü—Ä–æ–≤–µ—Ä–∫–∞ GOOGLE_CREDENTIALS_JSON:")
    json_str = os.getenv("GOOGLE_CREDENTIALS_JSON", "").strip()
    if json_str:
        try:
            json_data = json.loads(json_str)
            print(f"‚úÖ JSON –ø–∞—Ä—Å–∏—Ç—Å—è —É—Å–ø–µ—à–Ω–æ")
            print(f"   Project ID: {json_data.get('project_id', '–Ω–µ –Ω–∞–π–¥–µ–Ω')}")
            print(f"   Client Email: {json_data.get('client_email', '–Ω–µ –Ω–∞–π–¥–µ–Ω')}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
    else:
        print("‚ùå GOOGLE_CREDENTIALS_JSON –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª credentials
    print("\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ GOOGLE_APPLICATION_CREDENTIALS:")
    creds_path = os.getenv("GOOGLE_APPLICATION_CREDENTIALS", "").strip()
    if creds_path:
        if os.path.exists(creds_path):
            print(f"‚úÖ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {creds_path}")
            try:
                with open(creds_path, 'r') as f:
                    creds_data = json.load(f)
                print(f"   Project ID: {creds_data.get('project_id', '–Ω–µ –Ω–∞–π–¥–µ–Ω')}")
                print(f"   Client Email: {creds_data.get('client_email', '–Ω–µ –Ω–∞–π–¥–µ–Ω')}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        else:
            print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {creds_path}")
    else:
        print("‚ùå GOOGLE_APPLICATION_CREDENTIALS –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤ credentials –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ Vertex AI")
    print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–ª—é—á –Ω–µ –∏—Å—Ç–µ–∫ –∏ –Ω–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω")
    print("4. –î–ª—è production –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ GCP_KEY_JSON_B64 (base64 encoded)")

if __name__ == "__main__":
    check_credentials()

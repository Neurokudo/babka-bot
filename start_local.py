#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏ webhook —Å–µ—Ä–≤–µ—Ä–∞
"""
import os
import sys
import time
import signal
import subprocess
from pathlib import Path

def start_processes():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ webhook —Å–µ—Ä–≤–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö"""
    processes = []
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º webhook —Å–µ—Ä–≤–µ—Ä
        print("üåê –ó–∞–ø—É—Å–∫–∞–µ–º webhook —Å–µ—Ä–≤–µ—Ä...")
        webhook_process = subprocess.Popen([
            sys.executable, "webhook_server.py"
        ], cwd=Path(__file__).parent)
        processes.append(("webhook_server", webhook_process))
        
        # –î–∞–µ–º —Å–µ—Ä–≤–µ—Ä—É –≤—Ä–µ–º—è –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
        time.sleep(2)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        print("ü§ñ –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞...")
        bot_process = subprocess.Popen([
            sys.executable, "main.py"
        ], cwd=Path(__file__).parent)
        processes.append(("main_bot", bot_process))
        
        print("‚úÖ –û–±–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∑–∞–ø—É—â–µ–Ω—ã!")
        print("üì° Webhook —Å–µ—Ä–≤–µ—Ä: http://localhost:8000")
        print("ü§ñ Telegram –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ polling —Ä–µ–∂–∏–º–µ")
        print("\n–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        
        # –ñ–¥–µ–º —Å–∏–≥–Ω–∞–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        def signal_handler(signum, frame):
            print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")
            for name, process in processes:
                print(f"‚èπÔ∏è  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º {name}...")
                process.terminate()
            
            # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
            for name, process in processes:
                try:
                    process.wait(timeout=5)
                    print(f"‚úÖ {name} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                except subprocess.TimeoutExpired:
                    print(f"‚ö†Ô∏è  –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º {name}...")
                    process.kill()
            
            print("üëã –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            sys.exit(0)
        
        signal.signal(signal.SIGINT, signal_handler)
        signal.signal(signal.SIGTERM, signal_handler)
        
        # –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –ø—Ä–æ—Ü–µ—Å—Å—ã
        while True:
            for name, process in processes:
                if process.poll() is not None:
                    print(f"‚ùå –ü—Ä–æ—Ü–µ—Å—Å {name} –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º {process.returncode}")
                    return
            time.sleep(1)
            
    except KeyboardInterrupt:
        print("\nüõë –ü–æ–ª—É—á–µ–Ω–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        # –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
        for name, process in processes:
            if process.poll() is None:
                print(f"‚èπÔ∏è  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º {name}...")
                process.terminate()
                try:
                    process.wait(timeout=5)
                except subprocess.TimeoutExpired:
                    process.kill()

if __name__ == "__main__":
    start_processes()

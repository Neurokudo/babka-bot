#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –º–æ–¥—É–ª—è –ø–æ–¥–ø–∏—Å–æ–∫
"""

import os
import sys
from dotenv import load_dotenv

def test_subscriptions_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –º–æ–¥—É–ª—è –ø–æ–¥–ø–∏—Å–æ–∫"""
    load_dotenv()
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è –ø–æ–¥–ø–∏—Å–æ–∫...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å
        from app.db import db_subscriptions as db
        print("‚úÖ –ú–æ–¥—É–ª—å db_subscriptions –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_user_id = 999999
        db.create_or_update_user(test_user_id, "test_user", "Test", "User")
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_user_id} —Å–æ–∑–¥–∞–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
        balance = db.get_user_balance(test_user_id)
        print(f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {balance} –º–æ–Ω–µ—Ç")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
        db.create_subscription(
            user_id=test_user_id,
            plan="lite",
            coins=120,
            price_rub=1990,
            duration_days=30,
            payment_id="test_payment_123"
        )
        print("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏
        new_balance = db.get_user_balance(test_user_id)
        print(f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏: {new_balance} –º–æ–Ω–µ—Ç")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–∞–Ω–∏–µ –º–æ–Ω–µ—Ç
        success = db.charge_feature(test_user_id, "transform", 1, "Test charge")
        print(f"‚úÖ –°–ø–∏—Å–∞–Ω–∏–µ –º–æ–Ω–µ—Ç: {'—É—Å–ø–µ—à–Ω–æ' if success else '–Ω–µ—É–¥–∞—á–Ω–æ'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ —Å–ø–∏—Å–∞–Ω–∏—è
        final_balance = db.get_user_balance(test_user_id)
        print(f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ —Å–ø–∏—Å–∞–Ω–∏—è: {final_balance} –º–æ–Ω–µ—Ç")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞–Ω–µ
        plan_info = db.get_user_plan(test_user_id)
        print(f"‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞–Ω–µ: {plan_info}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫
        db.check_expired_subscriptions()
        print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_pricing_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –º–æ–¥—É–ª–µ–º pricing"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å pricing...")
    
    try:
        from app.services.pricing import get_tariff_by_name, feature_cost_coins
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞
        lite_tariff = get_tariff_by_name("lite")
        if lite_tariff:
            print(f"‚úÖ –¢–∞—Ä–∏—Ñ lite: {lite_tariff['title']}, {lite_tariff['coins']} –º–æ–Ω–µ—Ç")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–π
        transform_cost = feature_cost_coins("transform")
        print(f"‚úÖ –°—Ç–æ–∏–º–æ—Å—Ç—å transform: {transform_cost} –º–æ–Ω–µ—Ç")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ pricing: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –º–æ–¥—É–ª—è –ø–æ–¥–ø–∏—Å–æ–∫\n")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º pricing
    pricing_ok = test_pricing_integration()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º subscriptions
    subscriptions_ok = test_subscriptions_integration()
    
    if pricing_ok and subscriptions_ok:
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        sys.exit(0)
    else:
        print("\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        sys.exit(1)
